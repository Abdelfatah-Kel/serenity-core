import org.apache.tools.ant.filters.ReplaceTokens

ext {
    bintrayPackage = 'serenity-core'
}

jar {

    manifest {
        attributes("Implementation-Title": "Serenity Core",
                   "Implementation-Version": project.version.toString(),
        )
    }
}

test {
    maxParallelForks = Integer.parseInt(System.getProperty("forks","8"))
}

integrationTests {
    maxParallelForks = Integer.parseInt(System.getProperty("forks","1"))
}


//integrationTests {
//    beforeTest { desc, result ->
//        println "Executing test ${desc.name} [${desc.className}]"
//    }
//    afterTest { desc, result ->
//        println "Finished test ${desc.name} [${desc.className}] with result: ${result.resultType}"
//    }
//}
//
//test {
//    afterTest { desc, result ->
//        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
//    }
//}
dependencies {

    compile project(':serenity-model')
    compile project(':serenity-reports')
    compile project(':serenity-report-resources')
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "commons-codec:commons-codec:${commonsCodecVersion}"
    compile "commons-io:commons-io:${commonsIoVersion}"
    // Selenium
    compile("org.seleniumhq.selenium:selenium-java:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-api:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-support:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-edge-driver:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile("org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion") {
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
    }
    compile "org.projectlombok:lombok:1.18.20"
    compile("io.appium:java-client:${appiumJavaClientVersion}") {
        exclude group: 'org.seleniumhq.selenium'
        exclude group: 'cglib', module: 'cglib'
        exclude group: 'junit', module: 'junit'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.glassfish.tyrus', module: 'tyrus-core'
        exclude group: "net.bytebuddy", module:"byte-buddy"
        exclude group: "net.bytebuddy", module:"byte-buddy-agent"
        exclude group: "org.springframework", module:"spring-context"
    }
    compile "org.apache.groovy:groovy:${groovyVersion}"
    compile "net.sf.opencsv:opencsv:${openCsvVersion}"
    compile("commons-beanutils:commons-beanutils:${beanUtilsVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
    compile "commons-collections:commons-collections:${commonsCollectionsVersion}"
    compile("org.fluentlenium:fluentlenium-core:${fluentleniumVersion}") {
        exclude group: 'org.seleniumhq.selenium', module: 'selenium-java'
        exclude group: 'junit', module: 'junit-dep'
    }
    compile "io.github.bonigarcia:webdrivermanager:${webdrivermanagerVersion}"
    compile "com.jhlabs:filters:${jhlabfiltersVersion}"
    compile "com.paulhammant:ngwebdriver:${ngwebdriver}"
    compile "joda-time:joda-time:${jodaTimeVersion}"
    compile "org.hamcrest:hamcrest:${hamcrestVersion}"
    compile "com.google.jimfs:jimfs:${jimfsVersion}"
    compile "org.mockito:mockito-core:${mockitoCoreVersion}"

    // TEST DEPENDENCIES
    testCompile "junit:junit:${junitVersion}"
    api "org.assertj:assertj-core:${assertjVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testCompile "org.junit.vintage:junit-vintage-engine:${junit5Version}"
    testCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude group: 'org.junit.platform', module:'junit-platform-engine'
    }
    testCompile "org.springframework:spring-context:${springVersion}"
    testCompile "org.springframework:spring-context-support:${springVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "org.skyscreamer:jsonassert:${jsonassertVersion}"
    testCompile("org.jbehave:jbehave-core:${jbehaveVersion}") {
        exclude module: 'freemarker'
        exclude module: 'junit'
        exclude module: 'xstream'
    }
    compile "javax.xml.bind:jaxb-api:2.3.1"
    compile "com.sun.xml.bind:jaxb-core:2.3.0.1"
    compile "com.sun.xml.bind:jaxb-impl:2.3.3"
    compile "javax.activation:activation:1.1.1"
}

processResources {
    println "PROJECT = " + project.version
    filter ReplaceTokens, tokens: [
            "application.version": "" + project.version
    ]
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2011'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}
